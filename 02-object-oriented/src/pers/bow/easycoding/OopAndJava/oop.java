package pers.bow.easycoding.OopAndJava;

/*面向对象
1.拷贝
    浅拷贝（复制当前对象的基本数据类型，以及相应的引用变量，clone()就是）
    深拷贝（与母对象在任何引用路径上都不存在共享的实例对象，需要覆写clone()方法）
    一般深拷贝
2.三大特性
    封装：尽可能使用getter/setter而不是直接对public属性进行读取和修改（在必要时候可以在方法种添加日志等），所以在不知道属性的时候推荐使用private
    继承：避免滥用
          方法污染：父类具备的行为，通过继承传递给子类，子类并不具备执行此行为的能力
          方法爆炸：继承树不断扩大，底层类拥有的方法虽然都可以执行，但是由于方法众多，其中部分方法并非与当前类功能定位相关，造成选择困难
    多态：在运行时根据实际对象类型，同一个方法产生不同的运行结果，即多种不同的表现形式
            override 覆写（方法签名相同，实现不同的方法体）
            overload 重载（方法名称相同，参数类型、个数不同）静态绑定
 */
public class oop {

}
